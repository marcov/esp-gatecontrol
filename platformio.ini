; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]

src_dir     = src
default_envs = d1mini

; You MUST inject these options into [env:] section
; using ${common_env_data.***} (see below)
[common_env_data]
platform         = espressif8266

framework        = arduino

board_flash_mode = dout

src_build_flags  = -std=c++11
                   -I${platformio.src_dir}/chtml
                   -I${platformio.src_dir}/esp-libs/include

lib_deps =
    PubSubClient
    ArduinoJson
    EEPROM

extra_scripts =
    pre:esp-scripts/pio/html-to-c.py
    pre:esp-scripts/pio/gen-http-credentials.py
    post:pio/strip-floats.py

; *** Serial Monitor options
monitor_speed = 115200

; *** Upload Serial reset method for Wemos and NodeMCU
upload_port = ttyUSB0
;upload_resetmethod = nodemcu

; *** Upload file to OTA server using SCP
;upload_port = user@host:/path
;extra_scripts = pio/sftp-uploader.py

; *** Upload file to OTA server using HTTP
;upload_port = domus1:80/api/upload-arduino.php
;extra_scripts = pio/strip-floats.py, pio/http-uploader.py

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[env:d1mini]
platform         = ${common_env_data.platform}
framework        = ${common_env_data.framework}
board_build.flash_mode = ${common_env_data.board_flash_mode}
src_build_flags  = ${common_env_data.src_build_flags}
                 -DBOARD_TYPE_D1MINI
lib_deps         = ${common_env_data.lib_deps}
extra_scripts    = ${common_env_data.extra_scripts}
monitor_speed    = ${common_env_data.monitor_speed}

;upload_speed = 460800
upload_speed = 1000000
board        = d1_mini
board_build.ldscript = eagle.flash.4m1m.ld
